{
  "master": {
    "tasks": [
      {
        "id": "1",
        "title": "Phase 1: Foundation Setup",
        "description": "Complete the foundational setup for the Vietnamese Family Tree application with Next.js 15",
        "status": "pending",
        "priority": "high",
        "dependencies": [],
        "details": "This phase focuses on establishing the core application structure, data models, and basic UI components. All work must follow Next.js 15 async patterns.",
        "testStrategy": "Verify all components render correctly, data loads properly, and async patterns work as expected",
        "subtasks": [
          {
            "id": "1.1",
            "title": "Next.js 15 Project Setup",
            "description": "Initialize Next.js 15 project with TypeScript and Tailwind CSS",
            "status": "done",
            "priority": "high",
            "dependencies": [],
            "details": "Set up Next.js 15 with App Router, TypeScript configuration, Tailwind CSS v4, and ESLint. Ensure all async API patterns are properly configured.",
            "testStrategy": "Verify development server starts, TypeScript compilation works, and Tailwind styles are applied"
          },
          {
            "id": "1.2",
            "title": "Project Structure Setup",
            "description": "Create complete project structure with app/, data/, types/ directories",
            "status": "done",
            "priority": "high",
            "dependencies": [
              "1.1"
            ],
            "details": "Set up all required directories and files: app/ for Next.js App Router, data/ for JSON storage, types/ for TypeScript definitions, and middleware for route protection.",
            "testStrategy": "Verify all directories exist and basic routing works"
          },
          {
            "id": "1.3",
            "title": "Sample Vietnamese Family Data",
            "description": "Create realistic Vietnamese family data with 7 members and relationships",
            "status": "done",
            "priority": "high",
            "dependencies": [
              "1.2"
            ],
            "details": "Implement family-tree.json with 7 Vietnamese family members across 3 generations, including realistic names, relationships, and Base64 photo storage pattern.",
            "testStrategy": "Verify data loads correctly and relationships are properly structured"
          },
          {
            "id": "1.4",
            "title": "MemberCard Component",
            "description": "Complete MemberCard component with responsive design and Next.js 15 compatibility",
            "status": "in-progress",
            "priority": "high",
            "dependencies": [
              "1.3"
            ],
            "details": "Build responsive MemberCard component that displays member photos, names, titles, and birth/death dates. Must follow Next.js 15 async patterns and work on all screen sizes.",
            "testStrategy": "Test component rendering, responsive design, and async pattern compatibility"
          },
          {
            "id": "1.5",
            "title": "Tree Layout System",
            "description": "Implement horizontal tree layout with connection lines and navigation",
            "status": "pending",
            "priority": "high",
            "dependencies": [
              "1.4"
            ],
            "details": "Create horizontal family tree layout with generation-based grouping, connection lines between relatives, smooth scrolling, and touch-friendly mobile interactions.",
            "testStrategy": "Verify tree displays correctly, connections are accurate, and navigation works smoothly"
          },
          {
            "id": "1.6",
            "title": "Responsive Design Implementation",
            "description": "Ensure application works perfectly on mobile, tablet, and desktop",
            "status": "pending",
            "priority": "high",
            "dependencies": [
              "1.5"
            ],
            "details": "Implement responsive design strategy with mobile-first approach, touch-optimized interactions, and performance optimization for all devices.",
            "testStrategy": "Test on multiple devices and screen sizes, verify touch interactions work properly"
          }
        ]
      },
      {
        "id": "2",
        "title": "Phase 2: Authentication System",
        "description": "Implement secure JWT-based authentication system with Next.js 15 async patterns",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "1"
        ],
        "details": "Build complete authentication system with login/logout functionality, JWT token management, and route protection. All APIs must use Next.js 15 async patterns.",
        "testStrategy": "Test login/logout flows, token validation, and protected route access",
        "subtasks": [
          {
            "id": "2.1",
            "title": "User Data Setup",
            "description": "Configure users.json with bcrypt hashed passwords",
            "status": "done",
            "priority": "high",
            "dependencies": [],
            "details": "Set up users.json with hashed passwords using bcryptjs with 12 salt rounds. Include test accounts for development.",
            "testStrategy": "Verify password hashing works correctly and test accounts are accessible"
          },
          {
            "id": "2.2",
            "title": "Auth API Routes",
            "description": "Build authentication API routes with Next.js 15 async patterns",
            "status": "pending",
            "priority": "high",
            "dependencies": [
              "2.1"
            ],
            "details": "Create /api/auth/login, /api/auth/logout, /api/auth/verify routes using Next.js 15 async cookies() and headers() patterns.",
            "testStrategy": "Test all auth endpoints with proper async handling"
          },
          {
            "id": "2.3",
            "title": "JWT Token System",
            "description": "Implement JWT token generation and validation",
            "status": "pending",
            "priority": "high",
            "dependencies": [
              "2.2"
            ],
            "details": "Set up JWT token generation with 24-hour expiration, proper validation, and secure storage using httpOnly cookies.",
            "testStrategy": "Verify token generation, validation, and expiration work correctly"
          },
          {
            "id": "2.4",
            "title": "Login Form Component",
            "description": "Build login form with validation and error handling",
            "status": "pending",
            "priority": "high",
            "dependencies": [
              "2.3"
            ],
            "details": "Create responsive login form with username/password fields, validation, error handling, and loading states.",
            "testStrategy": "Test form validation, error display, and successful login flow"
          },
          {
            "id": "2.5",
            "title": "Auth Middleware",
            "description": "Protect editing routes with authentication checks",
            "status": "pending",
            "priority": "high",
            "dependencies": [
              "2.3"
            ],
            "details": "Implement middleware to protect all editing routes, using Next.js 15 async patterns for header and cookie access.",
            "testStrategy": "Verify protected routes reject unauthorized access"
          },
          {
            "id": "2.6",
            "title": "Logout Functionality",
            "description": "Complete session cleanup and token management",
            "status": "pending",
            "priority": "medium",
            "dependencies": [
              "2.4"
            ],
            "details": "Implement secure logout that clears all authentication data, invalidates tokens, and redirects appropriately.",
            "testStrategy": "Test logout clears all session data and redirects correctly"
          }
        ]
      },
      {
        "id": "3",
        "title": "Phase 3: CRUD Operations",
        "description": "Implement secure member management with full CRUD capabilities",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "2"
        ],
        "details": "Build complete CRUD operations for family members with authentication protection, form validation, and Base64 photo storage.",
        "testStrategy": "Test all CRUD operations work securely for authenticated users",
        "subtasks": [
          {
            "id": "3.1",
            "title": "Protected API Endpoints",
            "description": "Secure all family data mutations with authentication",
            "status": "pending",
            "priority": "high",
            "dependencies": [
              "2.5"
            ],
            "details": "Create secure API endpoints for creating, updating, and deleting family members with proper authentication checks.",
            "testStrategy": "Verify all mutations require authentication and work correctly"
          },
          {
            "id": "3.2",
            "title": "Add Member Form",
            "description": "Complete form with all fields and validation",
            "status": "pending",
            "priority": "high",
            "dependencies": [
              "3.1"
            ],
            "details": "Build comprehensive add member form with all required fields: name, gender, birth/death dates, photo upload, relationships, and biography.",
            "testStrategy": "Test form validation, photo upload, and successful member creation"
          },
          {
            "id": "3.3",
            "title": "Edit Member Functionality",
            "description": "Pre-populated forms with update capability",
            "status": "pending",
            "priority": "high",
            "dependencies": [
              "3.2"
            ],
            "details": "Implement edit functionality with pre-populated forms, update capability, and proper validation.",
            "testStrategy": "Test form pre-population, updates, and validation"
          },
          {
            "id": "3.4",
            "title": "Delete with Confirmation",
            "description": "Safe deletion with confirmation dialogs",
            "status": "pending",
            "priority": "medium",
            "dependencies": [
              "3.3"
            ],
            "details": "Implement safe deletion with confirmation dialogs, relationship cleanup, and proper error handling.",
            "testStrategy": "Test deletion confirmation, relationship cleanup, and error handling"
          },
          {
            "id": "3.5",
            "title": "Photo Upload System",
            "description": "Base64 conversion and storage",
            "status": "pending",
            "priority": "medium",
            "dependencies": [
              "3.2"
            ],
            "details": "Implement photo upload with Base64 conversion, size validation, and efficient storage in JSON files.",
            "testStrategy": "Test photo upload, conversion, and storage efficiency"
          },
          {
            "id": "3.6",
            "title": "Form Validation",
            "description": "Client and server-side validation",
            "status": "pending",
            "priority": "medium",
            "dependencies": [
              "3.2"
            ],
            "details": "Implement comprehensive validation for all forms with client-side feedback and server-side security.",
            "testStrategy": "Test all validation scenarios and error handling"
          }
        ]
      },
      {
        "id": "4",
        "title": "Phase 4: Advanced Features",
        "description": "Implement search, export, and performance optimization features",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "3"
        ],
        "details": "Add advanced features including search functionality, data export, performance optimization, and enhanced user experience.",
        "testStrategy": "Test all advanced features work correctly and perform well",
        "subtasks": [
          {
            "id": "4.1",
            "title": "Search & Filter System",
            "description": "Real-time search with multiple criteria",
            "status": "pending",
            "priority": "medium",
            "dependencies": [
              "3.6"
            ],
            "details": "Implement real-time search by name, filter by generation/gender/location, and search result highlighting.",
            "testStrategy": "Test search performance, accuracy, and user experience"
          },
          {
            "id": "4.2",
            "title": "Export Functionality",
            "description": "JSON and CSV export options",
            "status": "pending",
            "priority": "medium",
            "dependencies": [
              "4.1"
            ],
            "details": "Implement export functionality for JSON and CSV formats, including photos in exported data.",
            "testStrategy": "Test export formats, data integrity, and large file handling"
          },
          {
            "id": "4.3",
            "title": "Performance Optimization",
            "description": "Handle 1000+ members efficiently",
            "status": "pending",
            "priority": "medium",
            "dependencies": [
              "4.2"
            ],
            "details": "Optimize performance for large family trees with virtual scrolling, lazy loading, and efficient rendering.",
            "testStrategy": "Test performance with large datasets and measure load times"
          },
          {
            "id": "4.4",
            "title": "Zoom & Pan Controls",
            "description": "Navigate large family trees easily",
            "status": "pending",
            "priority": "low",
            "dependencies": [
              "4.3"
            ],
            "details": "Implement zoom and pan controls for navigating large family trees with smooth interactions.",
            "testStrategy": "Test zoom/pan functionality and performance"
          },
          {
            "id": "4.5",
            "title": "Shareable Links",
            "description": "Generate URLs for specific family members",
            "status": "pending",
            "priority": "low",
            "dependencies": [
              "4.4"
            ],
            "details": "Create shareable links for specific family members and tree views.",
            "testStrategy": "Test link generation and sharing functionality"
          }
        ]
      },
      {
        "id": "5",
        "title": "Next.js 15 Migration",
        "description": "Update all code to use Next.js 15 async patterns",
        "status": "pending",
        "priority": "critical",
        "dependencies": [],
        "details": "Critical migration to ensure all code follows Next.js 15 async patterns for cookies(), headers(), params, and searchParams.",
        "testStrategy": "Verify no synchronous access to async APIs and all patterns work correctly",
        "subtasks": [
          {
            "id": "5.1",
            "title": "Update API Routes",
            "description": "Convert all API routes to use async patterns",
            "status": "pending",
            "priority": "critical",
            "dependencies": [],
            "details": "Update all API routes to use await cookies(), await headers(), and proper async parameter handling.",
            "testStrategy": "Test all API routes with async patterns"
          },
          {
            "id": "5.2",
            "title": "Update Page Components",
            "description": "Convert page components to handle Promise params",
            "status": "pending",
            "priority": "critical",
            "dependencies": [
              "5.1"
            ],
            "details": "Update all page and layout components to properly handle Promise-wrapped params and searchParams.",
            "testStrategy": "Test all pages with async parameter handling"
          },
          {
            "id": "5.3",
            "title": "Update Authentication",
            "description": "Convert auth system to async patterns",
            "status": "pending",
            "priority": "critical",
            "dependencies": [
              "5.2"
            ],
            "details": "Update JWT token system, middleware, and auth utilities to use Next.js 15 async patterns.",
            "testStrategy": "Test authentication flow with async patterns"
          },
          {
            "id": "5.4",
            "title": "Apply Next.js 15 Codemod",
            "description": "Run official migration codemod",
            "status": "pending",
            "priority": "critical",
            "dependencies": [
              "5.3"
            ],
            "details": "Run npx @next/codemod@canary upgrade latest to apply official Next.js 15 migration.",
            "testStrategy": "Verify codemod applied correctly and no deprecation warnings"
          }
        ]
      }
    ],
    "metadata": {
      "created": "2025-07-31T03:21:07.409Z",
      "updated": "2025-07-31T03:21:07.409Z",
      "description": "Tasks for master context"
    }
  }
}